<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>必须知道的两大法则</title>
      <link href="posts/65d3.html"/>
      <url>posts/65d3.html</url>
      
        <content type="html"><![CDATA[<h1 id="必须知道的两大法则"><a href="#必须知道的两大法则" class="headerlink" title="必须知道的两大法则"></a>必须知道的两大法则</h1><h2 id="①STAR法则（Situation-Task-Action-Result）："><a href="#①STAR法则（Situation-Task-Action-Result）：" class="headerlink" title="①STAR法则（Situation Task Action Result）："></a>①STAR法则（Situation Task Action Result）：</h2><blockquote><p> Situation： 事情是在什么情况下发生； </p><p>Task:： 你是如何明确你的任务的；</p><p> Action： 针对这样的情况分析，你采用了什么行动方式；</p><p> Result： 结果怎样，在这样的情况下你学习到了什么。</p></blockquote><p>简而言之，STAR法则，就是一种讲述自己故事的方式，或者说，是一个清晰、条理的作文模板。不管是什么，合理 熟练运用此法则，可以轻松的对面试官描述事物的逻辑方式，表现出自己分析阐述问题的清晰性、条理性和逻辑性。</p><p>下面这段内容摘自百度百科，我觉得写的非常不错：</p><p>STAR法则，500强面试题回答时的技巧法则，备受面试者成功者和500强HR的推崇。 </p><p>由于这个法则被广泛应用 于面试问题的回答，尽管我们还在写简历阶段，但是，写简历时能把面试的问题就想好，会使自己更加主动和 自信，做到简历，面试关联性，逻辑性强，不至于在一个月后去面试，却把简历里的东西都忘掉了（更何况有 些朋友会稍微夸大简历内容）。</p><p>在我们写简历时，每个人都要写上自己的工作经历，活动经历，想必每一个同 学，都会起码花上半天甚至更长的时间去搜寻脑海里所有有关的经历，争取找出好的东西写在简历上。</p><p>但是 此时，我们要注意了，简历上的任何一个信息点都有可能成为日后面试时的重点提问对象，所以说，不能只管 写上让自己感觉牛的经历就完事了，要想到今后，在面试中，你所写的经历万一被面试官问到，你真的能回 答得流利，顺畅，且能通过这段经历，证明自己正是适合这个职位的人吗？</p><h2 id="②FAB-法则（Feature-Advantage-Beneﬁt）："><a href="#②FAB-法则（Feature-Advantage-Beneﬁt）：" class="headerlink" title="②FAB 法则（Feature Advantage Beneﬁt）："></a>②FAB 法则（Feature Advantage Beneﬁt）：</h2><blockquote><p> Feature： 是什么；</p><p> Advantage： 比别人好在哪些地方；</p><p> Beneﬁt： 如果雇佣你，招聘方会得到什么好处。</p></blockquote><p>简单来说，这个法则主要是让你的面试官知道你的优势、招了你之后对公司有什么帮助。</p>]]></content>
      
      
      <categories>
          
          <category> 面试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FAB 法则 </tag>
            
            <tag> STAR法则 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构与算法概念</title>
      <link href="posts/266e.html"/>
      <url>posts/266e.html</url>
      
        <content type="html"><![CDATA[<h1 id="算法是程序的灵魂"><a href="#算法是程序的灵魂" class="headerlink" title="算法是程序的灵魂"></a>算法是程序的灵魂</h1><p>程序 = 数据结构 + 算法</p><p>数据结构是算法的基础</p><h3 id="线性结构"><a href="#线性结构" class="headerlink" title="线性结构"></a>线性结构</h3><p>1)线性结构作为最常用的数据结构，其特点是<strong>数据元素之间存在一对一</strong>的线性关系</p><p>2)线性结构有两种不同的存储结构，即<strong>顺序存储结构(数组)**和</strong>链式存储结构(链表)<strong>。顺序存储的线性表称为顺序表，顺序表中的</strong>存储元素是连续**的</p><p>3)链式 存储的线性表称为链表，链表中的存储元素不一定是连续的，元素节点中存放数据元素以及相邻元素的地址信息</p><p>4)线性结构常见的有:<strong>数组、队列、链表和栈</strong>，后面我们会详细讲解.</p><h3 id="非线性结构"><a href="#非线性结构" class="headerlink" title="非线性结构"></a>非线性结构</h3><p>非线性结构包括：二维数据、多维数据、广义表、<strong>树结构、图结构</strong></p>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
